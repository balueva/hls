Node.js
Задание 1. В массиве 9502198 элементов, в сете 9502198 элементов
Вставка 20000000 в массив 129 мс, в сет 0 мс
Результат: в массиве 9502199 элементов, в сете 9502199 элементов
Удаление 5000 из массива 4 мс, из сета 0 мс
Результат: в массиве 9502198 элементов, в сете 9502198 элементов
Поиск 5000 в массиве 23 мс, в сете 0 мс
Результат: в массиве 9502198 элементов, idx=5717819, в сете 9502198 элементов, has=true

Firefox
Задание 1. В массиве 9501746 элементов, в сете 9501746 элементов
Вставка 20000000 в массив 0 мс, в сет 0 мс
Результат: в массиве 9501747 элементов, в сете 9501747
Удаление 5000 из массива 6 мс, из сета 0 мс
Результат: в массиве 9501746 элементов, в сете 9501746 элементов
Поиск 5000 в массиве 13 мс, в сете 0 мс
Результат: в массиве 9501746 элементов, idx=7627713, в сете 9501746 элементов, has=true

Для чистоты эксперимента количество элементов в коллекции сет и количество элементов в массиве совпадает,
массив получен из коллекции сет и имеет уникальные значения, но он об этом не знает, ему в общем то все равно.
В общем то, любая операция (вставка, удаление или поиск) в сете проводится быстрее, чем в массиве.
